const { gray, magenta } = require('colorette');
const userConfig = () => {
  try {
    return require('../../customlog.config.js');
  } catch (e) {
    return {}
  }
};
const defaultConfig = require('./config');
const config = { ...defaultConfig, ...userConfig() };

class CustomConsole {
  constructor() {
    this.dogNumber = 0;
    this.flowerNumber = 0;
  }

  log(value, ...args) {
    const { printDog, printFlower, printLine,  printArgs, showDogTace, showFlowerTrace } = config;
    const _args = printArgs ? args : [];
    const stackPath = Error().stack.split('\n')[2];
    if(printDog && value.includes('üê∂')) {
      const _dogNumber = `    ${++this.dogNumber}.`;
      console.log(magenta(_dogNumber), magenta(value), ..._args);
      showDogTace && console.log(gray(stackPath));
      return;
    }

    if(printFlower && value.includes('üå∫')) {
      const _flowerNumber = `${++this.flowerNumber}.`
      console.log(_flowerNumber, value, ..._args);
      showFlowerTrace && console.log(gray(stackPath));
      return;
    }

    if(printLine && (value.includes('---') || value.includes('==='))) {
      console.log(value);
      return;
    }

    if(!value.includes('üê∂') && !value.includes('üå∫') && !value.includes('---') && value.includes('===')) {
      console.log(value, ...args);
    }
  }
}

module.exports = new CustomConsole();
